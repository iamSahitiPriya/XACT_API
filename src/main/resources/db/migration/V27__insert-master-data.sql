/*
 * Copyright (c) 2022 - Thoughtworks Inc. All rights reserved.
 */

INSERT INTO tbm_assessment_topic(topic_id, topic_name, module) VALUES(71,'Build In Quality Mindset',3);
INSERT INTO tbm_assessment_topic(topic_id, topic_name, module) VALUES(72,'Test Strategy',3);
INSERT INTO tbm_assessment_topic(topic_id, topic_name, module) VALUES(73,'Testing Organization Setup',3);
INSERT INTO tbm_assessment_topic(topic_id, topic_name, module) VALUES(74,'Test Pyramid',3);

INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(177,'Business Goal Comprehension',71);
INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(178,'Project Technical Comprehension',71);

INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(179,'Test Preparedness',72);
INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(180,'Sensible Defaults',72);

INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(181,'Test Process',73);
INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(182,'Metrics',73);
INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(183,'Test Management',73);


INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(184,'Unit Testing',74);
INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(185,'Functional Testing',74);
INSERT INTO tbm_assessment_parameter(parameter_id, parameter_name, topic) VALUES(186,'Automation',74);

INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(485,'Does the QA team know the end-user of the application and their motivations for using the application under test?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(486,'Does the QA team understand the customer profiles/upstream-downstream systems identified for the application?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(487,'(If applicable) Does the QA team have access to usability studies and UX documents to test the application from a customer''s POV?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(488,'Does the QA team understand the business objectives of the application under test?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(489,'Can the QA team articulate the performance requirements for the application?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(490,'Can the QA team articulate the security requirements for the application',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(491,'(If Applicable) Can the QA team articulate the accessibility requirements for the application?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(492,'Does the team have access to critical stakeholders to clarify questions about the requirements for the application?',177);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(493,'Is the technical architecture of the project well understood by the QA team?',178);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(494,'Does the QA team understand the technical decisions taken to decide on the current tech stack?',178);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(495,'Is the QA team aware of tech-stack-specific issues that could culminate (functional/non-functional)',178);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(496,'Is the QA team aware of design best practices employed by the team (development)?',178);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(497,'Are the upstream/downstream dependencies of the application understood by the team?',178);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(498,'Is the team aware of existing tech debt and the impact it will have on the quality of the project?',179);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(499,'Is the team aware of the existing team structure and how teams are supposed to work together?',179);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(500,'Is there a test strategy created for the application under test? ',179);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(501,'Does the test strategy include functional and cross-functional testing attributes?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(502,'Does the test strategy call out assumptions and limitations for the testing to be done? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(503,'Does the test strategy include sensible defaults for requirements and story creation?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(504,'Does the test strategy include sensible defaults for the testing process to be followed by QA on teams?  (Standups, Dev box, IPMs, Showcases, etc.)',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(505,'Does the test strategy include sensible defaults for identifying automation workflows?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(506,'Does the test strategy include sensible defaults for identifying automation tools?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(507,'Does the test strategy include sensible defaults for best practices for framework creation using the above tools?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(508,'Does the test strategy include sensible default templates for test cases to be created? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(509,'Does the test strategy include sensible defaults for reporting tests? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(510,'Does the test strategy include sensible defaults for test case management? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(511,'Does the test strategy include sensible defaults for reporting?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(512,'Does the test strategy include details on sensible defaults for Smoke testing? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(513,'Does the test strategy include details on sensible defaults for CICD integration? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(514,'Does the test strategy include sensible defaults for running tests on the pipeline? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(515,'Does the test strategy include sensible defaults for extensibility and test suite maintenance? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(516,'Does the test strategy include sensible defaults for defect management? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(517,'Does the test strategy include sensible defaults for handling change management? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(518,'Does the test strategy include sensible defaults for handling regression testing?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(519,'Does the test strategy include sensible defaults for performance testing?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(520,'Does the test strategy include sensible defaults for security testing? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(521,'Does the test strategy include sensible defaults for integration testing? ',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(522,'Does the test strategy include sensible defaults for communication between teams ?',180);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(523,'Is the QA Team an active participant in daily standups?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(524,'Does the QA Team clarify requirements/acceptance criteria when a story is created?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(525,'Does the QA Team perform dev box testing? (intermittent testing does not count)',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(526,'Does the QA Team review dev unit test cases for correctness and completeness?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(527,'Does the QA Team flag and follow up on bad quality practices by team members?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(528,'Does the QA Team participate actively in showcases to display work completed?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(529,'Does the QA Team ensure inputs for the QA effort required for stories get included in the total effort?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(530,'Does the QA Team set aside the effort and time needed to develop automation?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(531,'Does the team keep an updated track of test cases (does not need to be detailed) by the component that is visible to everyone (Confluence pages etc.)?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(532,'Does the team tag stories/bugs tested by test cases?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(533,'Does the team indicate which tests need to be automated and which need to be manual? This needs to be updated regularly',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(534,'Does the team have a smoke test suite?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(535,'Does the QA Team track effort required to automate tests and ensure it is included in the total effort of development?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(536,'Do test cases get updated immediately if story requirements are changed?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(537,'Does the team update the tests to be performed based on the power of a test? (Only high-power tests - tests most likely to catch a bug - should be in the test list. All low-power tests should be culled)',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(538,'Does the team organize bug bashes before a release?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(539,'Does the team perform root cause analysis on critical/high-severity defects?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(540,'Does the team conduct/participate in retrospectives?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(541,'Does the team have an onboarding process for new joinees?',181);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(542,'Does the team use quality metrics/indices to keep a track of quality by component which then builds up to the overall quality of the application? ',182);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(543,'Does the team track bugs by priority and severity? ',182);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(544,'Does the team track automation and code coverage metrics? ',182);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(545,'Does the team use the test management software? ',183);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(546,'Does the team use the test management software for defect management? ',183);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(547,'Does the team use the test management software to drive testing efforts?',183);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(548,'Does the team use the test management software to track automation?',183);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(549,'Does the team use the test management software to track test drives?',183);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(550,'Does the team use the test management software to track quality metrics?',183);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(551,'Does the team perform dev boxes with the developers after development?',184);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(552,'Does the team use code coverage tools? ',184);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(553,'Does the team perform code reviews of the unit test code?',184);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(554,'Does the team manage the list of test cases/suites effectively? ',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(555,'Do test cases get updated regularly as requirements change?',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(556,'Does the team use test data effectively? ',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(557,'Test data is used and maintained effectively',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(558,'Has the team created test scenarios to cover integration testing?',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(559,'Has the team created test scenarios to cover UAT?',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(560,'Team regularly refreshes test data by scenario',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(561,'Team regularly refreshes test data by environment',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(562,'Team refreshes test suite to remove low-power tests',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(563,'Team records the results of test runs in a central report',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(564,'Team performs exploratory testing',185);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(565,'Appropriate tools/frameworks in place to perform automation',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(566,'SOLID and DRY principles followed for automation coding',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(567,'Test code is reviewed regularly by team members',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(568,'Test code is refactored regularly to ensure maintainability',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(569,'Test code is changed with changing test cases',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(570,'Tests are data-driven',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(571,'Test data for different types of runs (environments/scenarios) etc. exist',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(572,'Test reports are generated automatically with appropriate metrics recorded',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(573,'Tests are optimized for time run regularly',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(574,'Test suites for smoke testing exist',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(575,'Regression test suites have been created',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(576,'Tests are integrated with CICD pipelines',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(577,'Where do we run these tests & what is the frequency?',186);
INSERT INTO tbm_assessment_question(question_id, question_text, parameter) VALUES(578,'Automation test coverage by component/domain has been specified (does not have to be 100%)',186);

INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (177,'ONE','The awareness within the team is minimal or nil.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (177,'TWO','The team has minimal understanding of the functionality. The team understands isolated functional areas, but not how those are aligned with the overall business/product vision. There is minimal understanding of the users and their needs.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (177,'THREE','The team has a good understanding of the overall business/product vision, understand the functional areas, and how they are aligned with the overall business goals.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (177,'FOUR','In addition, the team fully understands the NFRs (security, accessibility, performance requirements.) The team has access to the stakeholders to understand the product goals and functionality.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (177,'FIVE','In addition, the team fully understands the various types of users and their goals with the product/platform. The team understands the competitor products in this space. They are in a position to collaborate with the product team and share feedback on product features.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (178,'ONE','The QAs (QA team) aren''t aware of the technical details and architecture of the product/platform');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (178,'TWO','The QAs (QA team) understand the tech stack used, but aren''t aware of the architecture or design');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (178,'THREE','The team understands architecture and incorporates some validation based on architecture');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (178,'FOUR','The team understands architecture well and testing driven by known strengths/weaknesses.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (178,'FIVE','Team fully understands the architecture design, and provides feedback to improve/optimise architecture');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (179,'ONE','No test strategy exists');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (179,'TWO','Test strategy document exists, but is not implemented or updated regularly. The understanding is fragmented across the various team members.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (179,'THREE','The test strategy document is understood fairly among the various members of the QA team and is followed for most of the execution. Updates to the testing strategy based on implementation feedback are minimal and take longer time.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (179,'FOUR','Test strategy is a living document, and is updated quite regularly based on implementation feedback. The team is well versed with the latest version, and the implementation seldom deviates from the strategy.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (179,'FIVE','The entire development team understands the testing strategy and contributes to updating based on the implementation experience. The strategy is exhaustive and covers the breadth, but at the same time simple to understand, implement and update.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (180,'ONE','There are no sensible defaults defined or implemented in the team');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (180,'TWO','Only a few sensible defaults are listed, and followed inconsistently');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (180,'THREE','Key sensible defaults are listed and implemented.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (180,'FOUR','Sensible defaults are listed comprehensively and followed regularly. Updates are done in a timely manner, based on the alignment to product/platform and technical requirements.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (180,'FIVE','Best of industry and pioneering approaches used across the team');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (181,'ONE','The testing process isn''t defined, and testing flow across stories/epics is inconsistent');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (181,'TWO','The testing process is partly defined. The team is not fully onboard with the process, and intermittently follows the defined process.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (181,'THREE','The testing process is defined and documented. The majority of the team understands the testing process, and the team follows the defined process for a majority of the stories/epics.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (181,'FOUR','The testing process is defined, and well-understood across the team. The process is followed for all testing and modified where and when necessary.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (181,'FIVE','Additionally, the team is in a position to take decisions on expectations for the process where needed.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (182,'ONE','The team doesn''t use any metrics to drive the testing.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (182,'TWO','The team tracks a few activity metrics. The metrics are sometimes dysfunctional and aren''t a true reflection of the team''s performance or testing quality.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (182,'THREE','The team has some useful metrics and they track them regularly. Metrics are an afterthought.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (182,'FOUR','The team tracks key metrics that inform the quality of testing implemented. The metric values are a good indication of how the testing is performed, and quality of the software.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (182,'FIVE','Metrics tracked truly indicate the quality of the testing and software. Trends in metrics are tracked regularly, and inform the key decisions the team needs to take to improve the software and testing.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (183,'ONE','There is no test management software or practice in place. The knowledge of tests, automation, and defects isn''t maintained in a commonplace.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (183,'TWO','Test management software is in place but not used by the team for test efforts consistently. The tests and other documentation are out of date.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (183,'THREE','Test management tools are used by the team regularly. There are some gaps in the overall tests, automation and documentation.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (183,'FOUR','All tests are run through test management, and the tests are up to date with minor exceptions.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (183,'FIVE','Test management is completely up to date, and all tests are run through the test management tools. There is a good record of all the tests run, and the corresponding results. Tracing older results is easy and common.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (184,'ONE','The team doesn''t have any of these practices in place.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (184,'TWO','The team performs dev box testing only for a few stories, and inconsistently. No code coverage tools in place, and no code reviews.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (184,'THREE','The team has regular dev box testing, the code coverage tools are in place, and unit test code reviews are done');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (184,'FOUR','Dev box testing is an essential part of the testing process. Code coverage tools are implemented, and code coverage is actively looked at, and improved. Code reviews are a regular practice in the team.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (184,'FIVE','Additionally, the test automation strategy is devised based on the unit test coverage. QAs share feedback on the unit tests with the developers. The team collectively adheres to the test pyramid.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (185,'ONE','All the testing is manual and unstructured. Test cases are not documented and mapped to functional areas. Many defects escape the testing cycle. Regression tests are incomplete, and the cycle is long and ineffective.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (185,'TWO','Most of the testing is manual, and tests are documented against the functionality. However, tests are not updated regularly with changes in functionality. Some defects escape the testing cycle and make it to production. There are gaps in regression testing cycles.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (185,'THREE','Regression tests are well documented, and cover the key functionality of the product/platform. Testing is a combination of manual and automated scripts. Automation tests need maintaince and upgrades. There are few defect leakages to the production environment.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (185,'FOUR','Regression tests are mapped to current functionality and are constantly upgraded based on the change in functionality. The majority of the tests are automated, and the team performs exploratory testing. Some of the automation tests are unreliable and need maintenance. These areas are known and covered using manual testing. The defect leakages to production are very rare. ');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (185,'FIVE','Regression tests are constantly upgraded, most times along side or before the product functionality is developed. Automated regression is exhaustive and robust. Team depends on the automated suite for regression cycles. Team spends quality time on exploratory, NFR testing. Defect leakage to production is very rare.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (186,'ONE','There are no automated tests in place.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (186,'TWO','Automated tests are minimal and the team depends on manual testing for regression. Automated tests are flaky and need maintenance. There is no CI in place.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (186,'THREE','Key test cases are automated and run on CI. The tests can be made more robust and build times can be optimized. The team fixes the key tests in a timely manner, and the results are analysed for every failure of build and fixed. ');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (186,'FOUR','Exhaustive automation test coverage is present for most of the regression suite. The test suite is robust and trustworthy. Build times are optimized, and the team depends on the results for build verification. The team spends most of the time on exploratory testing. There is good adherence to the test pyramid.');
INSERT INTO tbm_assessment_param_reference(parameter, rating, reference) VALUES (186,'FIVE','Additionally, the team has automated security checks and performance testing. The tests are constantly upgraded and optimized.');

UPDATE tbm_assessment_module SET is_active=true where module_id=3;

INSERT INTO tbl_access_control VALUES ('maitri.modi@thoughtworks.com','Admin');
INSERT INTO tbl_access_control VALUES ('ishika.aggrawal@thoughtworks.com','Admin');

SELECT setval('topic_seq',(select max(topic_id)+1 from tbm_assessment_topic),false);
SELECT setval('parameter_seq',(select max(parameter_id)+1 from tbm_assessment_parameter),false);
SELECT setval('question_seq',(select max(question_id)+1 from tbm_assessment_question),false);
