plugins {
    id("io.micronaut.library") version "3.2.2"
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id "java"
    id "application"
}

apply plugin: "java"
apply plugin: "application"

version = "0.1"
group = "com.xact"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.18.22"
    annotationProcessor "org.projectlombok:lombok:1.18.22"
    annotationProcessor "io.micronaut:micronaut-inject-java"

    implementation("io.micronaut:micronaut-management")

    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation("io.micronaut:micronaut-function-aws:1.4.1")
    implementation("io.micronaut.aws:micronaut-function-aws-api-proxy:3.2.1")
    implementation("com.amazonaws:aws-lambda-java-events:2.2.6")
    implementation("io.micronaut.aws:micronaut-function-aws")

    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.security:micronaut-security-jwt")

    testImplementation("org.mockito:mockito-all:1.8.4")


}

test {
    useJUnitPlatform()
}


java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

micronaut {
    //runtime("lambda")
    runtime "netty"
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.xact.*")
    }
}


tasks.named("assemble") {
    dependsOn(":shadowJar")
}

task deploy(dependsOn: [shadowJar], type: Exec) {
    description "Deploys code to AWS"
    commandLine "bash", "-c", "npx serverless deploy --stage ${stage}"

}


task destroy(type: Exec) {
    description "Destroys resources in AWS"
    commandLine "bash", "-c", "npx serverless remove --stage ${stage}"
}



mainClassName = "com.xact.assessment.Application"

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }
}
